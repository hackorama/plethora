
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: "jacoco"

sourceCompatibility = 1.7

repositories {
   flatDir { dirs 'lib/jmx', 'lib/json', 'lib/sigar', 'lib/snmp', 'lib/tests' }
   mavenCentral()
}

dependencies {
    compile fileTree(dir: 'lib/json', include: ['*.jar'])
    compile fileTree(dir: 'lib/jmx', include: ['*.jar'])
    compile fileTree(dir: 'lib/sigar', include: ['*.jar'])
    compile fileTree(dir: 'lib/snmp', include: ['*.jar'])

    testCompile fileTree(dir: 'lib/tests', include: ['*.jar'])
}

defaultTasks 'clean', 'plethora'
task plethora(dependsOn: ['mainJar', 'clientJar', 'configDocs'])
check.dependsOn jacocoTestReport

/*code coverage */

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

//ant.importBuild 'src/test/build.xml'

task docAnnotationProcessor(type: Jar){
    baseName = "plethora-annotation-processor"
    version =  "1.0"
    description 'Build plethora doc annotation processor'
    from(sourceSets.main.output) {
       include "com/hackorama/plethora/server/annotations/**"
       include "com/hackorama/plethora/common/**"
    }
}

task configDocs(type: JavaCompile, group: 'build') {
    description 'Process plethora specific doc annotations'
    dependsOn docAnnotationProcessor
    source = [sourceSets.main.java]
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processorpath", docAnnotationProcessor.archivePath,
            "-processor", "com.hackorama.plethora.server.annotations.DocAnnotationProcessor",
            "-Aprop.file=doc/application.properties",
            "-Aprop.help.file=doc/configuration.html",
            "-Aapi.help.file=doc/api.html"
    ]
    destinationDir = reporting.file("configuration")
}


task mainJar(type: Jar) {
    baseName = "plethora"
    version =  "1.0"
    description 'Build plethora server'
    manifest {
        attributes 'Main-Class': 'com.hackorama.plethora.main.Plethora'
    }
    from(sourceSets.main.output) {
        include "**"
    }
}

task clientJar(type: Jar) {
    baseName = "plethora_client"
    version =  "1.0"
    description 'Build plethora client library'
    from(sourceSets.main.output) {  
        include "com/hackorama/plethora/channel/**"
        include "com/hackorama/plethora/common/**"
    }
}

task runServer (type:JavaExec, dependsOn:[mainJar])  {
    description 'Builds and runs the stand alone dev server'
    classpath = sourceSets.main.runtimeClasspath
    main = "com.hackorama.plethora.main.Plethora"
    args 'src/main/resources/plethora.properties'
}

